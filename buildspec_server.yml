version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER} --password-stdin
      - region=us-west-2
      - $(aws ecr get-login --region $region --no-include-email)
      - TASK_DEFINITION_FILE=taskdefinition_server.json
      - REPOSITORY_URI_API=${REPOSITORY_URI}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) 
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker images...
      - docker build -t sample-app -f ./Dockerfile.server .
      - docker tag sample-app $REPOSITORY_URI_API:$IMAGE_TAG
      - docker tag sample-app $REPOSITORY_URI_API:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI_API:$IMAGE_TAG
      - docker push $REPOSITORY_URI_API:latest
      - echo Writing image definitions file...
      - printf '[{"name":"aws-community-server","imageUri":"%s"}]' $REPOSITORY_URI_API:latest > $TASK_DEFINITION_FILE
      - echo `pwd`
      - echo `ls -alh`
      - echo `cat $TASK_DEFINITION_FILE`
artifacts:
    files: 
      - $TASK_DEFINITION_FILE